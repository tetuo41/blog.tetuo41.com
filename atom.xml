<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stay Rad</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.tetuo41.com/"/>
  <updated>2021-12-02T03:33:00.632Z</updated>
  <id>https://blog.tetuo41.com/</id>
  
  <author>
    <name>Hiroki Hatsushika</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>リモートワークしました。リモートワークし過ぎたかもしれません。</title>
    <link href="https://blog.tetuo41.com/2021/12/03/remotework/"/>
    <id>https://blog.tetuo41.com/2021/12/03/remotework/</id>
    <published>2021-12-03T02:03:36.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<p>この記事は、<a href="https://qiita.com/advent-calendar/2021/supership" target="_blank" rel="noopener">Supershipグループ Advent Calendar 2021</a>の3日目の記事になります。</p><h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>コロナの影響で突然<a href="https://supership.jp/news/2020/02/19/4099/" target="_blank" rel="noopener">リモートワーク</a>となり、家には机はありましたが会社ほどの環境はなく右往左往していました。<br>私と同じ様な境遇の方も結構いたのかとおもいます。<br>そこで私のリモートワークを支えた技術（ガジェット）を紹介したいと思います。<br>この記事が皆様のリモートワークの助けになれば幸いです。</p><h2 id="リモート当初のデスク周り"><a href="#リモート当初のデスク周り" class="headerlink" title="リモート当初のデスク周り"></a>リモート当初のデスク周り</h2><p>まず最初に初期リモートワーク環境がこちらになります。</p><img src="/img/remote/remote-1.png" width="500" height="300" /><p>とりあえず、外部モニターを購入してノートパソコンの小さな画面から解放されました。</p><h2 id="現在のデスク周り"><a href="#現在のデスク周り" class="headerlink" title="現在のデスク周り"></a>現在のデスク周り</h2><p>そしてこちらが、現在のデスク</p><img src="/img/remote/remote-2.png" width="500" height="300"><p>概ね満足しているが、<br>おしゃれなデスク紹介などをYoutubeでみるとやっぱりシンプルな構成がいいのではないかと悩む毎日</p><h1 id="リモートワークを支える-技術（ガジェット）"><a href="#リモートワークを支える-技術（ガジェット）" class="headerlink" title="リモートワークを支える 技術（ガジェット）"></a>リモートワークを支える 技術（ガジェット）</h1><h2 id="ドッキングステーション"><a href="#ドッキングステーション" class="headerlink" title="ドッキングステーション"></a>ドッキングステーション</h2><p>Macはスタイリッシュで使い勝手もよく大変いいのですが、<br>ポートが少ないないことが欠点としてあります。。<br>その拡張性を補っているのがこちらのドッキングステーションと呼ばれるものです。</p><img src="/img/remote/remote-3.png" width="500" height="300"><p>圧倒的に便利<br>当初はポータブルタイプを使っていましたがステーションタイプに変更したことにより<br>さらに拡張性がましました。</p><h2 id="ノートパソコンスタンド"><a href="#ノートパソコンスタンド" class="headerlink" title="ノートパソコンスタンド"></a>ノートパソコンスタンド</h2><p>現在はクラムシェルモードで運用しています。<br>ダイソーとかでブックスタンドやまな板おきのハックが紹介されていましたが、<br>普通に専用のノートパソコンスタンドを使用しています。</p><img src="/img/remote/remote-4-1.png" width="500" height="300"><p>左が私物Mac<br>右が会社Mac</p><img src="/img/remote/remote-4-2.png" width="500" height="300"><h2 id="サイドテーブル"><a href="#サイドテーブル" class="headerlink" title="サイドテーブル"></a>サイドテーブル</h2><p>ランチやちょっとしたメモをしたいときはこのサイドテーブルを利用しています。<br>単純にスペースが広がったのはいいのですが、圧倒的に場所をとり少し邪魔なのでレイアウト変更を検討中です。</p><img src="/img/remote/remote-5.png" width="500" height="300">サイドテーブルは無印良品の折り畳み机です。<h2 id="HDMIセレクター"><a href="#HDMIセレクター" class="headerlink" title="HDMIセレクター"></a>HDMIセレクター</h2><p>リモートワークも長くなり、私物のパソコンとかとの切り替えを楽にできないかなぁと調べた結果<br>HDMIセレクターにたどり着きました。<br>モニターの切り替えがすごい楽になりました。</p><img src="/img/remote/remote-6.png" width="500" height="300">1台目<img src="/img/remote/remote-7-1.png" width="500" height="300">2台目(モニターが増えたため買い増しました)<img src="/img/remote/remote-7-2.png" width="500" height="300"><p>1 業務Mac<br>2 私物Windows<br>3 Nintendo Switch</p><h2 id="ガイア、オルテガ、マッシュ"><a href="#ガイア、オルテガ、マッシュ" class="headerlink" title="ガイア、オルテガ、マッシュ"></a>ガイア、オルテガ、マッシュ</h2><p>こちらが、現在の画面構成です。<br>メインモニターを4kにしてサブは2kを二枚配置しています。</p><img src="/img/remote/remote-8.png" width="500" height="300"><h2 id="モニターライトバー"><a href="#モニターライトバー" class="headerlink" title="モニターライトバー"></a>モニターライトバー</h2><p>モニターを増やした結果手元が暗くなったので購入した手元を照らしてくれるライトです。</p><p>モニターの上部に挟む様に設置し手元を満遍なく照らしてくれます。<br>ただ、Webカムの置き場所が高くなるのが難点</p><img src="/img/remote/remote-9.png" width="500" height="300">色温度も選べるのでいい感じです。<h2 id="女優ライト"><a href="#女優ライト" class="headerlink" title="女優ライト"></a>女優ライト</h2><p>Web会議はライトをたいて肌艶をだすといいぞ系のブログを見て購入しましたが<br>思った以上に眩しくて目が耐えられませんでした。。。<br>現在はポールにつけて上から照らす様に変更しました。<br>が、現在はほとんど使っていません。。</p><img src="/img/remote/remote-10.png" width="500" height="300"><h2 id="アロマ"><a href="#アロマ" class="headerlink" title="アロマ"></a>アロマ</h2><p>チームメンバーに教えてもらって早速私も導入したアロマストーン<br>昼食後や夕方などに使うと気分の切り替えが出来る気がする。<br>おしゃれになった気がします。<br>欠点はアロマオイルがとても高価で長続きするか心配です。</p><img src="/img/remote/remote-11.png" width="500" height="300"><h2 id="会議用マイク"><a href="#会議用マイク" class="headerlink" title="会議用マイク"></a>会議用マイク</h2><p>こちらはリモートワークのマナーとして購入しました。<br>ゲーミングヘッドセットなども検討しましたが長時間つけてても苦にならないこちらのタイプにしました。</p><img src="/img/remote/remote-12.png" width="500" height="300">本当に音質はマナーだと日々感じています。<h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><ul><li>正直3つも画面は入らない</li><li>ドッキングステーション、HDMIセレクターは至高</li><li>ヘッドセット（音質）はいろんな気遣い</li><li>女優ライトはいらない</li><li>アロマはいいぞ</li></ul><p>以上が現在の私のリモートワークを支える技術（ガジェット）となります。<br>こっちを買ったら、こっちが必要になってなど沼感がありますが、、<br>今は概ね満足しています。<br>まだまだ、コロナが続きそうなのでこの先も技術（ガジェット）探究が続きそうです。</p><h2 id="最後に宣伝"><a href="#最後に宣伝" class="headerlink" title="最後に宣伝"></a>最後に宣伝</h2><p>Supershipではプロダクト開発やサービス開発に関わる人を絶賛募集しております。<br>ご興味がある方は以下リンクよりご確認ください。<br> <a href="https://supership.jp/recruit/" target="_blank" rel="noopener">Supership株式会社 採用サイト</a><br>是非ともよろしくお願いします。</p><p>他にも、<a href="https://super-stories.com/" target="_blank" rel="noopener">Super Stories</a>というオープン社内報やっていますので興味ある方は覗いて見いてください！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;この記事は、&lt;a href=&quot;https://qiita.com/advent-calendar/2021/supership&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Supershipグループ Advent Calendar 2021&lt;/a&gt;の3日
      
    
    </summary>
    
    
    
      <category term="remotework" scheme="https://blog.tetuo41.com/tags/remotework/"/>
    
  </entry>
  
  <entry>
    <title>Emberで他のApiサーバを使うとき</title>
    <link href="https://blog.tetuo41.com/2016/05/30/Ember%E3%81%A7%E4%BB%96%E3%81%AEApi%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E3%81%8D/"/>
    <id>https://blog.tetuo41.com/2016/05/30/Ember%E3%81%A7%E4%BB%96%E3%81%AEApi%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E4%BD%BF%E3%81%86%E3%81%A8%E3%81%8D/</id>
    <published>2016-05-30T02:03:36.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>ローカルで開発してデータだけApiサーバから取得したいとき、<br><code>server/</code>配下をどうにかすると便利な話。</p><p><code>DS</code>の<code>RESTAdapter</code>にHostを設定しても良いのだが、<br>開発だけ向き先を別ドメインに変えたい時などにしたい場合は<code>http-proxy</code>を使用する。</p><p><a href="https://www.npmjs.com/package/http-proxy" target="_blank" rel="noopener">http-proxy</a></p><h1 id="作成"><a href="#作成" class="headerlink" title="作成"></a>作成</h1><p>proxyファイルを作成</p><p><code>ember g http-proxy &lt;Local Path&gt; &lt;Remote URL&gt;</code></p><p><a href="http://ember-cli.com/extending/" target="_blank" rel="noopener">doc</a></p><p>作成の際に<code>server/index.js</code>の上書きを聞かれるので問題ない場合は<code>y</code>、<br>すでに記述がある場合は上書きしないように気をつける。<br>上書きをしない場合は<code>server/index.js</code>で”proxies”が読み込まれる用にする。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">app</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> globSync   = <span class="built_in">require</span>(<span class="string">'glob'</span>).sync;</span><br><span class="line">  <span class="keyword">var</span> proxies    = globSync(<span class="string">'./proxies/**/*.js'</span>, &#123; <span class="attr">cwd</span>: __dirname &#125;).map(<span class="built_in">require</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Log proxy requests</span></span><br><span class="line">  <span class="keyword">var</span> morgan  = <span class="built_in">require</span>(<span class="string">'morgan'</span>);</span><br><span class="line">  app.use(morgan(<span class="string">'dev'</span>));</span><br><span class="line"></span><br><span class="line">  proxies.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">route</span>) </span>&#123; route(app); &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="api配下の全てを指定するとき"><a href="#api配下の全てを指定するとき" class="headerlink" title="api配下の全てを指定するとき"></a>api配下の全てを指定するとき</h1><p>例えば<code>http://your-domain/</code>の<code>api/*</code>を利用したい場合などは</p><h2 id="proxyファイル作成"><a href="#proxyファイル作成" class="headerlink" title="proxyファイル作成"></a>proxyファイル作成</h2><p><code>ember g http-proxy api /api</code></p><p>上記のコマンドでapiのproxyファイルが作成される</p><h2 id="server-proxies-api-jsファイル修正"><a href="#server-proxies-api-jsファイル修正" class="headerlink" title="server/proxies/api.jsファイル修正"></a><code>server/proxies/api.js</code>ファイル修正</h2><p>作成した<code>server/proxies/api.js</code>を修正</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> proxyPath = <span class="string">'/api'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">app</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// For options, see:</span></span><br><span class="line">  <span class="comment">// https://github.com/nodejitsu/node-http-proxy</span></span><br><span class="line">  <span class="comment">// 追記</span></span><br><span class="line">  <span class="keyword">var</span> serverUrl = <span class="string">'http://hogeproxy:80'</span>;</span><br><span class="line"></span><br><span class="line">  options = &#123;</span><br><span class="line">    target: serverUrl,</span><br><span class="line">    changeOrigin: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// var proxy= require('http-proxy').createProxyServer(&#123;&#125;);</span></span><br><span class="line">  <span class="keyword">var</span> proxy = <span class="built_in">require</span>(<span class="string">'http-proxy'</span>).createProxyServer(options);</span><br><span class="line"></span><br><span class="line">  proxy.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, req</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(err, req);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  app.use(proxyPath, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// include root path in proxied request</span></span><br><span class="line">    <span class="comment">// リクエストパスをサーバUrlとローカルパス、リクエストパスに書き換え</span></span><br><span class="line">    req.url = serverUrl + proxyPath + req.url;</span><br><span class="line">    <span class="comment">// proxy.web(req, res, &#123; target: '/api' &#125;);</span></span><br><span class="line">    proxy.web(req, res);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="それでもmockを利用したい場合などは設定値にする"><a href="#それでもmockを利用したい場合などは設定値にする" class="headerlink" title="それでもmockを利用したい場合などは設定値にする"></a>それでもmockを利用したい場合などは設定値にする</h1><p><code>server/index.js</code>を変更し、起動時<code>environment</code>に値を指定する</p><p>ember sever 起動時 <code>ember server --environment=offline</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">app, options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> globSync = <span class="built_in">require</span>(<span class="string">'glob'</span>).sync;</span><br><span class="line">  <span class="keyword">var</span> mocks, proxies;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (options.environment === <span class="string">'offline'</span>) &#123;</span><br><span class="line">    mocks = globSync(<span class="string">'./mocks/**/*.js'</span>, &#123;</span><br><span class="line">      cwd: __dirname</span><br><span class="line">    &#125;).map(<span class="built_in">require</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    proxies = globSync(<span class="string">'./proxies/**/*.js'</span>, &#123;</span><br><span class="line">      cwd: __dirname</span><br><span class="line">    &#125;).map(<span class="built_in">require</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Log proxy requests</span></span><br><span class="line">  <span class="keyword">var</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>);</span><br><span class="line">  app.use(morgan(<span class="string">'dev'</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mocks) &#123;</span><br><span class="line">    mocks.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">route</span>) </span>&#123;</span><br><span class="line">      route(app);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (proxies) &#123;</span><br><span class="line">    proxies.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">route</span>) </span>&#123;</span><br><span class="line">      route(app);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a href="http://mike1234.com/2015/02/02/ember-cli-easily-toggle-between-mocks-and-live-server/" target="_blank" rel="noopener">参考</a></p><p>※注 proxyファイルの書き方が、何か違うかもしれない。。</p><h1 id="追記"><a href="#追記" class="headerlink" title="追記"></a>追記</h1><p>上記の用に設定しなくても<code>server/index.js</code>でmockを読み込まない用にして、<br>サーバ起動さの際にproxyを指定してあげれば良い。<code>ember sever --proxy &#39;http://your-domain/&#39;</code></p><p><a href="http://www.aymerick.com/2015/03/26/ember-cli-server-upload-directory.html" target="_blank" rel="noopener">参考</a></p><p>いちいちServerに設定するのが面倒な場合は<code>~/.ember-cli</code>に記述もできる</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "liveReload" : true,</span><br><span class="line">  "environment" : "server",</span><br><span class="line">  "proxy" : "http://your-domain"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://ember-cli.com/#runtime-configuration" target="_blank" rel="noopener">doc</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概要&quot;&gt;&lt;a href=&quot;#概要&quot; class=&quot;headerlink&quot; title=&quot;概要&quot;&gt;&lt;/a&gt;概要&lt;/h1&gt;&lt;p&gt;ローカルで開発してデータだけApiサーバから取得したいとき、&lt;br&gt;&lt;code&gt;server/&lt;/code&gt;配下をどうにかすると便利な話。&lt;
      
    
    </summary>
    
    
    
      <category term="emberjs" scheme="https://blog.tetuo41.com/tags/emberjs/"/>
    
  </entry>
  
  <entry>
    <title>ブログをHexoに移行しました</title>
    <link href="https://blog.tetuo41.com/2016/05/25/%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92Hexo%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F/"/>
    <id>https://blog.tetuo41.com/2016/05/25/%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92Hexo%E3%81%AB%E7%A7%BB%E8%A1%8C%E3%81%97%E3%81%BE%E3%81%97%E3%81%9F/</id>
    <published>2016-05-25T02:06:46.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<p>WordpressからHexoに移行した話</p><h3 id="理由"><a href="#理由" class="headerlink" title="理由"></a>理由</h3><ul><li>多機能だが全然使いこなせない</li><li>gitで全てを管理できない</li></ul><p>上記が主な理由なのだが、何を隠そう元々４エントリーしかなかったので<br>心機一転環境を変えてモチベーションを上げようというのが狙い。。</p><h3 id="移行先の選定"><a href="#移行先の選定" class="headerlink" title="移行先の選定"></a>移行先の選定</h3><p>下記のサイトを参考に選定しました</p><ul><li><a href="https://staticsitegenerators.net/" target="_blank" rel="noopener">Static Site Generators</a></li><li><a href="https://www.staticgen.com/" target="_blank" rel="noopener">StaticGen</a></li></ul><p>最終的に<a href="http://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a>と<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>で迷い、<br>Node.jsの勉強になるかと思い「Hexo」を選びました。</p><h3 id="セットアップ"><a href="#セットアップ" class="headerlink" title="セットアップ"></a>セットアップ</h3><p>公式サイトを参考にインストール(node,npmはインストールは省き)</p><h4 id="Hexo-インストール"><a href="#Hexo-インストール" class="headerlink" title="Hexo インストール"></a>Hexo インストール</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init weblog</span><br><span class="line">$ cd weblog</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>Hello Worldの記事が表示されます<br>すごい簡単</p><h4 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h4><p>サーバはGitHubPagesを利用しようと思ったので、<br>GitHubにレポジトリを用意</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cd weblog</span><br><span class="line">$ git init</span><br><span class="line">$ git remote add origin git@github.com:tetuo41&#x2F;weblog.git</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;first commit&quot;</span><br><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure><p>今回は何も考えずmasterブランチで管理しようと思う</p><h4 id="Wordpressの記事を移行"><a href="#Wordpressの記事を移行" class="headerlink" title="Wordpressの記事を移行"></a>Wordpressの記事を移行</h4><p>Wordpressから、記事のxmlをエクスポートしHexoに取り込む<br>取り込む際には「<a href="https://github.com/hexojs/hexo-migrator-wordpress" target="_blank" rel="noopener">hexo-migrator-wordpress</a>」プラグインを利用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd weblog</span><br><span class="line">$ npm install hexo-migrator-wordpress --save</span><br><span class="line">$ hexo migrate wordpress &lt;source&gt;</span><br></pre></td></tr></table></figure><p>取り込むと<code>source/_post/</code>配下に記事が作成される<br>画像などは修正する必要があるので各々修正</p><p>私は画像は<code>post_asset_folder</code>を利用せず、<code>&lt;img&gt;</code>タグで運用することにしました。<br><code>post_asset_folder: true</code>にすると記事ごとにフォルダが作成されそこに画像データを入れると<br>記事内で<code></code>タグで便利になるっぽいですが、私はそんなに画像を使わないだろうと判断し<br><code>source/img/</code>フォルダを作成し、そこを参照するように変更</p><h1 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h1><p>準備ができたので、Deploy作業設定ファイル<code>_config.yml</code>を色々変更</p><p>サイトの基本情報系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Stay Rad</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">author: Hiroki Hatsushika</span><br><span class="line">language: ja</span><br><span class="line">timezone: Asia&#x2F;Tokyo</span><br></pre></td></tr></table></figure><p>テーマ（<a href="https://github.com/hexojs/hexo-theme-light" target="_blank" rel="noopener">light</a>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: light</span><br></pre></td></tr></table></figure><p>Deployment</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:tetuo41&#x2F;weblog.git</span><br><span class="line">  branch: gh-pages</span><br><span class="line">  message: hexo deploy</span><br></pre></td></tr></table></figure><p>私はGitHub Pagesを利用しようと思うので<br>別途<code>https://github.com/hexojs/hexo-deployer-git</code>プラグインを入れとく</p><p>設定変更が終わったらいよいよDeploy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><p>GitHub Pageが表示される</p><p>私は独自のドメインを利用したので<code>CNAME</code>を設置して完了</p><h3 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h3><p>非常にメンテナンスしやすくなった。<br>MySQLサーバも必要ないし、GitHub Pageも利用できるしGitで管理もできるようになった、<br>画像の運用に関しては色々検討したいが、取り敢えずPluginを漁ってみようと思う。<br>ゆくゆくはPluginも作りたいｗ</p><p><a href="http://qiita.com/f_prg/items/4ef2a29f78be56575ec8" target="_blank" rel="noopener">HexoにWordPressの記事をマイグレートする</a><br><a href="http://harasou.github.io/2015/04/28/hexo-%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97%E3%83%A1%E3%83%A2/" target="_blank" rel="noopener">hexo-セットアップメモ</a><br><a href="http://dev.shikakun.com/post/hexo-init/" target="_blank" rel="noopener">Hexo でブログをつくるまで</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;WordpressからHexoに移行した話&lt;/p&gt;
&lt;h3 id=&quot;理由&quot;&gt;&lt;a href=&quot;#理由&quot; class=&quot;headerlink&quot; title=&quot;理由&quot;&gt;&lt;/a&gt;理由&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;多機能だが全然使いこなせない&lt;/li&gt;
&lt;li&gt;gitで全てを管理でき
      
    
    </summary>
    
    
      <category term="Try" scheme="https://blog.tetuo41.com/categories/Try/"/>
    
    
      <category term="Hexo" scheme="https://blog.tetuo41.com/tags/Hexo/"/>
    
      <category term="wordpress" scheme="https://blog.tetuo41.com/tags/wordpress/"/>
    
  </entry>
  
  <entry>
    <title>FireBase試し (EmberFire)</title>
    <link href="https://blog.tetuo41.com/2016/05/20/emberfire-firebase/"/>
    <id>https://blog.tetuo41.com/2016/05/20/emberfire-firebase/</id>
    <published>2016-05-19T17:05:20.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<p>Google i/oでFirebaseが気になったので試しにどんなものかさわってみた<br><a href="https://events.google.com/io2016/" target="_blank" rel="noopener">https://events.google.com/io2016/</a></p><h2 id="■-環境"><a href="#■-環境" class="headerlink" title="■ 環境"></a>■ 環境</h2><p>node v4.4.4<br>npm v2.15.1<br>bower v1.7.9</p><p>ember v2.5.1<br>ember-cli v2.5.0<br>emberFire v1.6.6</p><h3 id="EmberFireのTutorialを参考に試してみる"><a href="#EmberFireのTutorialを参考に試してみる" class="headerlink" title="EmberFireのTutorialを参考に試してみる"></a>EmberFireのTutorialを参考に試してみる</h3><p><a href="https://www.firebase.com/docs/web/libraries/ember/" target="_blank" rel="noopener">https://www.firebase.com/docs/web/libraries/ember/</a></p><h3 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h3><p><a href="https://www.firebase.com/docs/web/libraries/ember/guide.html" target="_blank" rel="noopener">https://www.firebase.com/docs/web/libraries/ember/guide.html</a></p><h2 id="■-準備"><a href="#■-準備" class="headerlink" title="■ 準備"></a>■ 準備</h2><h3 id="FireBase-ConsoleでApp作成"><a href="#FireBase-ConsoleでApp作成" class="headerlink" title="FireBase ConsoleでApp作成"></a>FireBase ConsoleでApp作成</h3><img src="/img/p1.png" width="300" height="141"><h2 id="■-作成"><a href="#■-作成" class="headerlink" title="■ 作成"></a>■ 作成</h2><h3 id="Ember-App-作成"><a href="#Ember-App-作成" class="headerlink" title="Ember App 作成"></a>Ember App 作成</h3><h4 id="ember-cliを利用してAppを作成"><a href="#ember-cliを利用してAppを作成" class="headerlink" title="ember-cliを利用してAppを作成"></a>ember-cliを利用してAppを作成</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ember new emberFire-study</span><br></pre></td></tr></table></figure><h3 id="emberFireインストール"><a href="#emberFireインストール" class="headerlink" title="emberFireインストール"></a>emberFireインストール</h3><h4 id="こちらもember-cliを使用してemberFireをインストール"><a href="#こちらもember-cliを使用してemberFireをインストール" class="headerlink" title="こちらもember-cliを使用してemberFireをインストール"></a>こちらもember-cliを使用してemberFireをインストール</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ember install emberfire</span><br></pre></td></tr></table></figure><p>インストールすると「bower.json」と「app/adapters/application.js」に<br>emberFireが追記されていることがわかる</p><h3 id="emberFire設定"><a href="#emberFire設定" class="headerlink" title="emberFire設定"></a>emberFire設定</h3><ul><li>「config/environment.js」内の先ほど作成したfirebaseのURLを設定する</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firebase:&#39;https:&#x2F;&#x2F;YOUR-FIREBASE-APP.firebaseio.com&#x2F;&#39;</span><br></pre></td></tr></table></figure><h3 id="データ作成用にモデル作成"><a href="#データ作成用にモデル作成" class="headerlink" title="データ作成用にモデル作成"></a>データ作成用にモデル作成</h3><p>ember-cliでモデルを作成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ember generate model post title:string body:string timestamp:number</span><br></pre></td></tr></table></figure><p>app/models/post.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> DS.Model.extend(&#123;</span><br><span class="line">  title: DS.attr(<span class="string">'string'</span>),</span><br><span class="line">  body: DS.attr(<span class="string">'string'</span>),</span><br><span class="line">  timestamp: DS.attr(<span class="string">'number'</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="データ作成用にテンプレート作成"><a href="#データ作成用にテンプレート作成" class="headerlink" title="データ作成用にテンプレート作成"></a>データ作成用にテンプレート作成</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ember generate template posts</span><br></pre></td></tr></table></figure><h3 id="データ投入処理追加"><a href="#データ投入処理追加" class="headerlink" title="データ投入処理追加"></a>データ投入処理追加</h3><ul><li>template</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>New Post<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"post-publish"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;&#123;input value=title placeholder="Title"&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;&#123;textarea value=body placeholder="Body"&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> &#123;&#123;<span class="attr">action</span> "<span class="attr">publishPost</span>"&#125;&#125;&gt;</span>Publish<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>controller</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ember generate controller posts</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Ember <span class="keyword">from</span> <span class="string">'ember'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// app/controllers/posts.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Ember.Controller.extend(&#123;</span><br><span class="line">  sortProperties: [<span class="string">'timestamp'</span>],</span><br><span class="line">  sortAscending: <span class="literal">false</span>, <span class="comment">// sorts post by timestamp</span></span><br><span class="line">  actions: &#123;</span><br><span class="line">    publishPost: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> newPost = <span class="keyword">this</span>.store.createRecord(<span class="string">'post'</span>, &#123;</span><br><span class="line">        title: <span class="keyword">this</span>.get(<span class="string">'title'</span>),</span><br><span class="line">        body: <span class="keyword">this</span>.get(<span class="string">'body'</span>),</span><br><span class="line">        timestamp: <span class="keyword">new</span> <span class="built_in">Date</span>().getTime()</span><br><span class="line">      &#125;);</span><br><span class="line">      newPost.save();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="サーバを立ち上げ動作確認"><a href="#サーバを立ち上げ動作確認" class="headerlink" title="サーバを立ち上げ動作確認"></a>サーバを立ち上げ動作確認</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ember s</span><br></pre></td></tr></table></figure><p><a href="http://localhost:4200/" target="_blank" rel="noopener">http://localhost:4200/</a></p><img src="/img/p2.png" width="300" height="186"><p><a href="http://localhost:4200/posts" target="_blank" rel="noopener">http://localhost:4200/posts</a></p><img src="/img/p3.png" width="300" height="141"><p>「Publis」ボタンを押してblogを投稿</p><h3 id="FireBase-Console画面にて確認"><a href="#FireBase-Console画面にて確認" class="headerlink" title="FireBase Console画面にて確認"></a>FireBase Console画面にて確認</h3><img src="/img/p4.png" width="300" height="124"><p>無事登録されていることを確認</p><h3 id="データ一覧を参照する処理を追記"><a href="#データ一覧を参照する処理を追記" class="headerlink" title="データ一覧を参照する処理を追記"></a>データ一覧を参照する処理を追記</h3><ul><li>route</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ember generate route posts</span><br></pre></td></tr></table></figure><p>途中でTemplesを上書きするか聞いてくるので取り敢えず「No」！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Ember.Route.extend(&#123;</span><br><span class="line">  model: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.store.findAll(<span class="string">'post'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>先ほどのtemplesに下記を追記</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">&#123;&#123;#each model as |post|&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;post.title&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;post.body&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;&#123;/each&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="サーバを立ち上げ動作確認-1"><a href="#サーバを立ち上げ動作確認-1" class="headerlink" title="サーバを立ち上げ動作確認"></a>サーバを立ち上げ動作確認</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ember s</span><br></pre></td></tr></table></figure><p><a href="http://localhost:4200/posts" target="_blank" rel="noopener">http://localhost:4200/posts</a></p><img src="/img/p5.png" width="245" height="300"><p>上記の通り登録したものが表示されればOK。<br>他にもコメントなどのリレーションのコードもあるが割愛ｗ</p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p><a href="https://github.com/tetuo41/emberFire-study" target="_blank" rel="noopener">github</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Google i/oでFirebaseが気になったので試しにどんなものかさわってみた&lt;br&gt;&lt;a href=&quot;https://events.google.com/io2016/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://events.g
      
    
    </summary>
    
    
      <category term="Try" scheme="https://blog.tetuo41.com/categories/Try/"/>
    
    
      <category term="emberjs" scheme="https://blog.tetuo41.com/tags/emberjs/"/>
    
      <category term="Firebase" scheme="https://blog.tetuo41.com/tags/Firebase/"/>
    
  </entry>
  
  <entry>
    <title>JAWSDAYS 2015でみたSession</title>
    <link href="https://blog.tetuo41.com/2015/05/22/jawsdays-2015-session/"/>
    <id>https://blog.tetuo41.com/2015/05/22/jawsdays-2015-session/</id>
    <published>2015-05-22T04:49:00.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<p>memo</p><p>安達 輝雄</p><iframe src="//www.slideshare.net/slideshow/embed_code/key/owFFdzB4u5b72y" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/interu07/jaws-days-2015-devops-devops" title="JAWS DAYS 2015 「DevOpsが普及した今だからこそ 考える DevOpsの次の姿」" target="_blank">JAWS DAYS 2015 「DevOpsが普及した今だからこそ 考える DevOpsの次の姿」</a> </strong> from <strong><a href="//www.slideshare.net/interu07" target="_blank">Teruo Adachi</a></strong> </div><a href="http://interu.hatenablog.com/" title="" target="">blog</a><p>土居 正行<br><a href="https://speakerdeck.com/mdoi/kai-fa-suruyouniyun-yong-suruinhura-jaws-days-2015?slide=1" target="_blank" rel="noopener">https://speakerdeck.com/mdoi/kai-fa-suruyouniyun-yong-suruinhura-jaws-days-2015?slide=1</a></p><p>西谷 圭介</p><iframe src="//www.slideshare.net/slideshow/embed_code/key/kcvyBBAAbQ6NBF" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/keisuke69/aws-lambda-46129981" title="AWS Lambdaを紐解く" target="_blank">AWS Lambdaを紐解く</a> </strong> from <strong><a href="//www.slideshare.net/keisuke69" target="_blank">Keisuke Nishitani</a></strong> </div><p>照井 将士</p><iframe src="//www.slideshare.net/slideshow/embed_code/key/181QakOBiCpv21" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/marcyterui/deep-dive-46150379" title="[Deep Dive]Infra寄りのDevがお送りするRDS for Aurora徹底検証" target="_blank">[Deep Dive]Infra寄りのDevがお送りするRDS for Aurora徹底検証</a> </strong> from <strong><a href="//www.slideshare.net/marcyterui" target="_blank">Terui Masashi</a></strong> </div><p>大崎 充博</p><iframe src="//www.slideshare.net/slideshow/embed_code/key/25HFtuBLd0m5QA" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/OsakiMitsuhiro/jaws-ug2015-citynetosaki" title="JAWS DAYS 2015 Deep Dive &amp; Ace Amazon RDS for Aurora　大崎充博" target="_blank">JAWS DAYS 2015 Deep Dive &amp; Ace Amazon RDS for Aurora　大崎充博</a> </strong> from <strong><a href="//www.slideshare.net/OsakiMitsuhiro" target="_blank">OsakiMitsuhiro</a></strong> </div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;memo&lt;/p&gt;
&lt;p&gt;安達 輝雄&lt;/p&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/owFFdzB4u5b72y&quot; width=&quot;425&quot; height=&quot;355&quot; frameborder=&quot;0&quot;
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://blog.tetuo41.com/categories/Memo/"/>
    
    
      <category term="JAWSDAYS2015" scheme="https://blog.tetuo41.com/tags/JAWSDAYS2015/"/>
    
  </entry>
  
  <entry>
    <title>cron Memo</title>
    <link href="https://blog.tetuo41.com/2014/04/17/cron_memo/"/>
    <id>https://blog.tetuo41.com/2014/04/17/cron_memo/</id>
    <published>2014-04-17T01:45:15.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<p><code>$ vi /var/log/cron</code></p><p>passwd</p><p>pwconv</p><p>pwunconv</p><p><code>$ cat /etc/shadow</code></p><p><code>$service crond restart</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;$ vi /var/log/cron&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;passwd&lt;/p&gt;
&lt;p&gt;pwconv&lt;/p&gt;
&lt;p&gt;pwunconv&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cat /etc/shadow&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$service c
      
    
    </summary>
    
    
      <category term="linux" scheme="https://blog.tetuo41.com/categories/linux/"/>
    
    
      <category term="Memo" scheme="https://blog.tetuo41.com/tags/Memo/"/>
    
  </entry>
  
  <entry>
    <title>Passenger Memo</title>
    <link href="https://blog.tetuo41.com/2013/12/17/passenger-memo/"/>
    <id>https://blog.tetuo41.com/2013/12/17/passenger-memo/</id>
    <published>2013-12-17T02:04:55.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<h1 id="必要なモノをインストール"><a href="#必要なモノをインストール" class="headerlink" title="必要なモノをインストール"></a>必要なモノをインストール</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install httpd httpd-devel apr-devel apr-util-devel curl-devel</span><br></pre></td></tr></table></figure><h1 id="Passengerをインストール"><a href="#Passengerをインストール" class="headerlink" title="Passengerをインストール"></a>Passengerをインストール</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gem install passenger</span><br></pre></td></tr></table></figure><h1 id="apache-moduleインストール"><a href="#apache-moduleインストール" class="headerlink" title="apache moduleインストール"></a>apache moduleインストール</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ passenger-install-apache2-module</span><br></pre></td></tr></table></figure><h1 id="設定ファイル追加"><a href="#設定ファイル追加" class="headerlink" title="設定ファイル追加"></a>設定ファイル追加</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LoadModule passenger_module ～&#x2F;mod_passenger.so</span><br><span class="line">PassengerRoot ～&#x2F;passenger-x.y.z</span><br><span class="line">PassengerDefaultRuby ～&#x2F;ruby</span><br></pre></td></tr></table></figure><h1 id="httpd-conf-変更追加"><a href="#httpd-conf-変更追加" class="headerlink" title="httpd.conf 変更追加"></a>httpd.conf 変更追加</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;passenger.conf</span><br></pre></td></tr></table></figure><p>Thanks for the link.<br><a href="http://babiy3104.hateblo.jp/entry/2013/08/30/193034" target="_blank" rel="noopener">http://babiy3104.hateblo.jp/entry/2013/08/30/193034</a><br><a href="http://morizyun.github.io/blog/passenger-install-apache-ruby-rails/" target="_blank" rel="noopener">http://morizyun.github.io/blog/passenger-install-apache-ruby-rails/</a><br><a href="http://petitviolet.hatenablog.com/entry/20130804/1375604128" target="_blank" rel="noopener">http://petitviolet.hatenablog.com/entry/20130804/1375604128</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;必要なモノをインストール&quot;&gt;&lt;a href=&quot;#必要なモノをインストール&quot; class=&quot;headerlink&quot; title=&quot;必要なモノをインストール&quot;&gt;&lt;/a&gt;必要なモノをインストール&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://blog.tetuo41.com/categories/Memo/"/>
    
    
      <category term="linux" scheme="https://blog.tetuo41.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MIME type Memo</title>
    <link href="https://blog.tetuo41.com/2013/10/18/mime-type-memo/"/>
    <id>https://blog.tetuo41.com/2013/10/18/mime-type-memo/</id>
    <published>2013-10-18T08:14:37.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<p>.doc application/msword<br>.xls application/vnd.ms-excel<br>.ppt application/vnd.ms-powerpoint</p><p>.docx application/vnd.openxmlformats-officedocument.wordprocessingml.document<br>.xlsx application/vnd.openxmlformats-officedocument.spreadsheetml.sheet<br>.pptx application/vnd.openxmlformats-officedocument.presentationml.presentation</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;.doc application/msword&lt;br&gt;.xls application/vnd.ms-excel&lt;br&gt;.ppt application/vnd.ms-powerpoint&lt;/p&gt;
&lt;p&gt;.docx application/vnd.openxmlformat
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://blog.tetuo41.com/categories/Memo/"/>
    
    
      <category term="MIME" scheme="https://blog.tetuo41.com/tags/MIME/"/>
    
  </entry>
  
  <entry>
    <title>vagrant Memo</title>
    <link href="https://blog.tetuo41.com/2013/10/04/vagrant-memo/"/>
    <id>https://blog.tetuo41.com/2013/10/04/vagrant-memo/</id>
    <published>2013-10-04T10:37:12.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<h1 id="64bitだったver"><a href="#64bitだったver" class="headerlink" title="64bitだったver"></a>64bitだったver</h1><p><code>$ vagrant box add centos64_64 http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20130427.box</code></p><p><code>$ init centos64_64</code></p><h1 id="32bitver"><a href="#32bitver" class="headerlink" title="32bitver"></a>32bitver</h1><p><code>$ vagrant box add centos64_32 http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-i386-v20130427.box</code></p><h1 id="Vargrant認識-Vargrantファイル作成"><a href="#Vargrant認識-Vargrantファイル作成" class="headerlink" title="Vargrant認識 Vargrantファイル作成"></a>Vargrant認識 Vargrantファイル作成</h1><p><code>$ vagrant init centos64_32</code></p><h1 id="起動"><a href="#起動" class="headerlink" title="起動"></a>起動</h1><p><code>$ vagrant up</code></p><h1 id="仮想サーバー接続"><a href="#仮想サーバー接続" class="headerlink" title="仮想サーバー接続"></a>仮想サーバー接続</h1><p><code>$ vagrant ssh</code></p><h1 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h1><p><code>$ vagrant halt</code></p><h1 id="削除"><a href="#削除" class="headerlink" title="削除"></a>削除</h1><p><code>$ vagrant destroy</code></p><p>Thanks for the link.<br><a href="http://k-holy.hatenablog.com/entry/2013/08/30/192243" target="_blank" rel="noopener">http://k-holy.hatenablog.com/entry/2013/08/30/192243</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;64bitだったver&quot;&gt;&lt;a href=&quot;#64bitだったver&quot; class=&quot;headerlink&quot; title=&quot;64bitだったver&quot;&gt;&lt;/a&gt;64bitだったver&lt;/h1&gt;&lt;p&gt;&lt;code&gt;$ vagrant box add centos64_6
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://blog.tetuo41.com/categories/Memo/"/>
    
    
      <category term="vagrant" scheme="https://blog.tetuo41.com/tags/vagrant/"/>
    
  </entry>
  
  <entry>
    <title>tmail</title>
    <link href="https://blog.tetuo41.com/2013/07/03/tmail/"/>
    <id>https://blog.tetuo41.com/2013/07/03/tmail/</id>
    <published>2013-07-03T07:56:43.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mail_data</span><span class="params">(mFile)</span></span></span><br><span class="line">  file = File.open(mFile).read</span><br><span class="line">  mail = TMail::Mail.parse(file)</span><br><span class="line">  <span class="comment">#p mail.to # 送信先</span></span><br><span class="line">  <span class="comment">#p mail.from # 送信元</span></span><br><span class="line">  idx = <span class="number">1</span> <span class="comment"># ファイル名</span></span><br><span class="line">  mail.parts.each <span class="keyword">do</span> <span class="params">|m|</span></span><br><span class="line">    <span class="keyword">if</span> <span class="literal">nil</span> != m[<span class="string">'content-disposition'</span>]</span><br><span class="line">    m.base64_decode</span><br><span class="line">    attach_fileNm = m[<span class="string">'content-disposition'</span>][<span class="string">'filename'</span>]</span><br><span class="line">    <span class="comment">#File.open("#&#123;CLIENTDATAPATH&#125;/#&#123;attach_fileNm&#125;.#&#123;ext(m)&#125;", 'w') do |f|</span></span><br><span class="line">    File.open(<span class="string">"<span class="subst">#&#123;CLIENTDATAPATH&#125;</span>/<span class="subst">#&#123;attach_fileNm&#125;</span>"</span>, <span class="string">'w'</span>) <span class="keyword">do</span> <span class="params">|f|</span></span><br><span class="line">      f.write m.body</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  idx += <span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">CTYPE_TO_EXT = &#123;</span><br><span class="line"><span class="string">'image/jpeg'</span> =&gt; <span class="string">'jpg'</span>,</span><br><span class="line"><span class="string">'image/gif'</span> =&gt; <span class="string">'gif'</span>,</span><br><span class="line"><span class="string">'image/png'</span> =&gt; <span class="string">'png'</span>,</span><br><span class="line"><span class="string">'image/tiff'</span> =&gt; <span class="string">'tiff'</span>,</span><br><span class="line"><span class="string">'text/plain'</span> =&gt; <span class="string">'txt'</span>,</span><br><span class="line"><span class="string">'application/vnd.ms-excel'</span> =&gt; <span class="string">'csv'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ext</span><span class="params">( mail )</span></span></span><br><span class="line">  CTYPE_TO_EXT[mail.content_type] <span class="params">||</span> <span class="string">'txt'</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Thanks for the link.<br><a href="http://ecpplus.net/weblog/ruby%E3%81%A7%E5%8F%97%E4%BF%A1%E3%83%A1%E3%83%BC%E3%83%AB%E8%A7%A3%E6%9E%90/" target="_blank" rel="noopener">ここ</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://blog.tetuo41.com/categories/Memo/"/>
    
    
      <category term="ruby" scheme="https://blog.tetuo41.com/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>Linuxパーミッション Memo</title>
    <link href="https://blog.tetuo41.com/2013/07/03/linux-p/"/>
    <id>https://blog.tetuo41.com/2013/07/03/linux-p/</id>
    <published>2013-07-03T06:32:01.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<p>3桁の8進数Ver.</p><p>0 —<br>1 –x<br>2 -w-<br>3 -wx<br>4 r–<br>5 r-x<br>6 rw-<br>7 rwx</p><p><a href="http://itpro.nikkeibp.co.jp/article/COLUMN/20060227/230728/" target="_blank" rel="noopener">http://itpro.nikkeibp.co.jp/article/COLUMN/20060227/230728/</a></p><p>&nbsp;</p><p>setgid(sgid)という属性</p><p>2775<br><a href="http://blog.onk164.net/archives/272.html" target="_blank" rel="noopener">http://blog.onk164.net/archives/272.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;3桁の8進数Ver.&lt;/p&gt;
&lt;p&gt;0 —&lt;br&gt;1 –x&lt;br&gt;2 -w-&lt;br&gt;3 -wx&lt;br&gt;4 r–&lt;br&gt;5 r-x&lt;br&gt;6 rw-&lt;br&gt;7 rwx&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://itpro.nikkeibp.co.jp/article/CO
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://blog.tetuo41.com/categories/Memo/"/>
    
    
      <category term="linux" scheme="https://blog.tetuo41.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linuxでログイン出来ないユーザをログイン出来るように変更する</title>
    <link href="https://blog.tetuo41.com/2013/07/03/linux-login/"/>
    <id>https://blog.tetuo41.com/2013/07/03/linux-login/</id>
    <published>2013-07-03T03:19:03.000Z</published>
    <updated>2021-12-02T03:33:00.632Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ su testuser</span><br><span class="line">This account is currently not available.</span><br></pre></td></tr></table></figure><p>↑こんなヤツが出る場合</p><p>testuserには「/sbin/nologin」が設定されている<br>なので「/bin/bash」に変更して上げる</p><p><code>$ usermod -s /bin/bash testuser</code></p></br><p>Thanks for the link.<br><a href="http://server-setting.info/centos/login_user.html" target="_blank" rel="noopener">http://server-setting.info/centos/login_user.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://blog.tetuo41.com/categories/Memo/"/>
    
    
      <category term="linux" scheme="https://blog.tetuo41.com/tags/linux/"/>
    
  </entry>
  
</feed>
